####################################
  Elementary model
####################################

The elementary model, uses the following objective function
.. math::

          \sum_{t=1}^{t=t_{end}} \Big( \sum_{i=1}^{i=j} P_{cost}[i] \cdot P[i,t]  \Big)

where :math:`t_{end}` is the end time of the series, :math:`P_{cost}[i]` is the cost of generator at place i (e.g. the i th generator)
:math:`P[i,t]` is the power that can be generated by an generator at time :math:`t`

With the following constrains:
The power delivered from the generator on time interval :math:`t` cannot be larger then maximum power of the generator and should be higher then the minimum power the generator must deliver
.. math::

        P_{min}[i] \leq P[i,t] \leq P_{max}[i]

Where :math:`P_{min}[i]` is the minimum power generator i can deliver , :math:`P[i,t]` is the desired power at time :math:`t`  ,  :math:`P_{max}[i]` is the maximum power generator i can deliver


Generated power and load needed should be matched, the sum off all the powers at a time instance :math:`t` needs to match the load at an time instance :math:`t`
.. math::

          \sum_{i=1}^{i=j}  P[i,t]  = Load[t]

Where :math:`Load[t]` is the load at time instance :math:`t`

As seen from above the elementary case does not incorporate technical constrains for the generators and the lines connecting them.
This makes the linear program simpler and equires thus less computation time.
